#!/bin/bash
set -e

### –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤
if (( EUID != 0 )); then
  echo "‚ùó –°–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω –æ—Ç root: sudo bash <(curl ...)"
  exit 1
fi

clear
echo "üåê –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ n8n —Å GitHub"
echo "----------------------------------------"

### 1. –í–≤–æ–¥ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
read -p "üåê –í–≤–µ–¥–∏—Ç–µ –¥–æ–º–µ–Ω –¥–ª—è n8n (–Ω–∞–ø—Ä–∏–º–µ—Ä: n8n.example.com): " DOMAIN
read -p "üìß –í–≤–µ–¥–∏—Ç–µ email –¥–ª—è SSL-—Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ Let's Encrypt: " EMAIL
read -p "üîê –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö Postgres: " POSTGRES_PASSWORD
read -p "ü§ñ –í–≤–µ–¥–∏—Ç–µ Telegram Bot Token: " TG_BOT_TOKEN
read -p "üë§ –í–≤–µ–¥–∏—Ç–µ Telegram User ID (–¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π): " TG_USER_ID
read -p "üóùÔ∏è  –í–≤–µ–¥–∏—Ç–µ –∫–ª—é—á —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è n8n (Enter –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏): " N8N_ENCRYPTION_KEY

if [ -z "$N8N_ENCRYPTION_KEY" ]; then
  N8N_ENCRYPTION_KEY=$(openssl rand -hex 32)
  echo "‚úÖ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –∫–ª—é—á —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è: $N8N_ENCRYPTION_KEY"
fi

### 2. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –∏ Compose
echo "üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker..."
if ! command -v docker &>/dev/null; then
  curl -fsSL https://get.docker.com | sh
fi

echo "üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ NPM..."
if ! command -v npm &>/dev/null; then
  apt update && apt install -y npm
fi

if ! command -v docker compose &>/dev/null; then
  curl -SL https://github.com/docker/compose/releases/download/v2.23.3/docker-compose-linux-x86_64 -o /usr/local/bin/docker-compose
  chmod +x /usr/local/bin/docker-compose
  ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose || true
fi

### 3. –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ —Å GitHub
echo "üì• –ö–ª–æ–Ω–∏—Ä—É–µ–º –ø—Ä–æ–µ–∫—Ç —Å GitHub..."
rm -rf /opt/n8n-install
git clone https://github.com/kalininlive/n8n-beget-install.git /opt/n8n-install
cd /opt/n8n-install

### 4. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è .env —Ñ–∞–π–ª–æ–≤
cat > ".env" <<EOF
DOMAIN=$DOMAIN
EMAIL=$EMAIL
POSTGRES_PASSWORD=$POSTGRES_PASSWORD
N8N_ENCRYPTION_KEY=$N8N_ENCRYPTION_KEY
N8N_EXPRESS_TRUST_PROXY=true
TG_BOT_TOKEN=$TG_BOT_TOKEN
TG_USER_ID=$TG_USER_ID
EOF

cat > "bot/.env" <<EOF
TG_BOT_TOKEN=$TG_BOT_TOKEN
TG_USER_ID=$TG_USER_ID
EOF

chmod 600 .env bot/.env

### 4.1 –°–æ–∑–¥–∞–Ω–∏–µ –Ω—É–∂–Ω—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –∏ –ª–æ–≥–æ–≤
mkdir -p logs backups traefik/acme
touch backup.log
chown -R 1000:1000 logs backups backup.log
chmod -R 755 logs backups

### 4.2 –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Traefik –¥–ª—è –±–æ–µ–≤–æ–≥–æ —Ä–µ–∂–∏–º–∞
cat > "traefik/traefik.yml" <<EOF
global:
  sendAnonymousUsage: false

entryPoints:
  web:
    address: ":80"
  websecure:
    address: ":443"

certificatesResolvers:
  letsencrypt:
    acme:
      email: $EMAIL
      storage: /etc/traefik/acme/acme.json
      httpChallenge:
        entryPoint: web

providers:
  file:
    filename: /etc/traefik/dynamic_conf.yml
    watch: true

log:
  level: DEBUG
EOF

### 5. –°–±–æ—Ä–∫–∞ –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –æ–±—Ä–∞–∑–∞ n8n
docker build -f Dockerfile.n8n -t n8n-custom:latest .

### 6. –ó–∞–ø—É—Å–∫ docker compose (–≤–∫–ª—é—á–∞—è Telegram-–±–æ—Ç–∞)
docker compose up -d --force-recreate

### 7. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã–¥–∞—á–∏ SSL-—Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞..."
sleep 30  # –î–∞–µ–º –≤—Ä–µ–º—è Traefik –ø–æ–ª—É—á–∏—Ç—å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç
docker compose logs traefik | grep -i acme

### 8. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ cron
chmod +x ./backup_n8n.sh
(crontab -l 2>/dev/null; echo "0 2 * * * /opt/n8n-install/backup_n8n.sh >> /opt/n8n-install/backup.log 2>&1") | crontab -

### 9. –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram
curl -s -X POST https://api.telegram.org/bot$TG_BOT_TOKEN/sendMessage \
  -d chat_id=$TG_USER_ID \
  -d text="‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ n8n –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –î–æ–º–µ–Ω: https://$DOMAIN"

### 10. –§–∏–Ω–∞–ª—å–Ω—ã–π –≤—ã–≤–æ–¥
echo "üì¶ –ê–∫—Ç–∏–≤–Ω—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã:"
docker ps --format "table {{.Names}}\t{{.Status}}"

echo "üîê –ü—Ä–æ–≤–µ—Ä—å—Ç–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç:"
echo "openssl s_client -connect $DOMAIN:443 -servername $DOMAIN | openssl x509 -noout -dates"

echo "üîÑ –ï—Å–ª–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–µ –≤—ã–¥–∞–ª—Å—è, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏:"
echo "docker compose logs traefik -f"

echo "üéâ –ì–æ—Ç–æ–≤–æ! –û—Ç–∫—Ä–æ–π: https://$DOMAIN"
